{"version":3,"file":"static/js/377.92bd5a29.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/FilterConfig.js","components/Filter/Filter.jsx","pages/HomePage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Alert from '@mui/material/Alert';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { getContacts } from 'redux/contacts/selectors';\r\nimport { addContact } from 'redux/contacts/operations';\r\n\r\nexport function ContactForm() {\r\n  const theme = createTheme();\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [displayAlert, setDisplayAlert] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const name = event.target.elements.name.value;\r\n    const number = event.target.elements.number.value;\r\n    const isAtContacts = contacts.find(contact => contact.name === name);\r\n    if (isAtContacts) {\r\n      setDisplayAlert(true);\r\n      return;\r\n    }\r\n    if (!name && !number) {\r\n      alert('Enter your name and phone number');\r\n      return;\r\n    }\r\n    const newContact = { name, number };\r\n    dispatch(addContact(newContact));\r\n    setDisplayAlert(false);\r\n    event.target.reset();\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component='main' maxWidth='xs'>\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 14,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography component='h1' variant='h5'>\r\n            Add New Contact\r\n          </Typography>\r\n          <Box component='form' onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='name'\r\n              label='Name'\r\n              type='text'\r\n              name='name'\r\n              autoComplete='name'\r\n            />\r\n            <TextField\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='number'\r\n              label='Number'\r\n              type='tel'\r\n              id='phone'\r\n              autoComplete='phone'\r\n            />\r\n            {displayAlert && <Alert variant='outlined' severity='warning' sx={{ mt: 2, mb: 2 }} >\r\n              This contact is already in your phonebook!\r\n            </Alert>}\r\n            <Button\r\n              type='submit'\r\n              fullWidth\r\n              variant='outlined'\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              add contact\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { getContacts } from 'redux/contacts/selectors';\r\nimport { deleteContact } from 'redux/contacts/operations';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', align: 'center'},\r\n  { id: 'number', label: 'Phone Number', align: 'center'},\r\n  { id: 'delete', label: 'Delete Contact', align: 'center'},\r\n];\r\n\r\nexport function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(state => state.filter);\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Paper sx={{ width: 'fit-content', overflow: 'hidden' }}>\r\n        <TableContainer sx={{ maxHeight: 440}}>\r\n          <Table stickyHeader aria-label='sticky table'>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: '32.45vw', fontSize: '1.25em' }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredContacts\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((contact) => {\r\n                  return (\r\n                    <TableRow hover role='checkbox' tabIndex={-1} key={contact.id}>\r\n                      {columns.map((column) => {\r\n                        const value = contact[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align} style={{ fontSize: '1.1em' }}>\r\n                            {value}\r\n                            {column.id === 'delete' && \r\n                            <Button onClick={() => dispatch(deleteContact(contact.id))} variant='outlined' color='error'>\r\n                              Delete\r\n                            </Button>}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component='div'\r\n          count={filteredContacts.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}","import { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: '#11b16ea5',\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'black',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      'border': '1px solid rgba(194, 194, 194, 0.87)',\r\n      borderRadius: '5px',\r\n      width: '42ch',\r\n      '&:focus': {\r\n        width: '50ch',\r\n        borderColor: '#11b16ea5',\r\n      },\r\n      '&::placeholder': {\r\n        color: 'rgb(133, 133, 133)',\r\n        opacity: 1\r\n      },\r\n    },\r\n  },\r\n}));","import { useDispatch } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Search, SearchIconWrapper, StyledInputBase } from './FilterConfig';\r\nimport { Typography } from '@mui/material';\r\nimport { filterContacts } from 'redux/filterSlice';\r\n\r\nexport function Filter() {\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <Box sx={{\r\n      marginTop: 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    }}>\r\n      <Typography component='h1' variant='h5' sx={{ mb: 1 }}>\r\n        My contacts\r\n      </Typography>\r\n      <Toolbar>\r\n        <Search>\r\n          <SearchIconWrapper>\r\n            <SearchIcon />\r\n          </SearchIconWrapper>\r\n          <StyledInputBase\r\n            placeholder='Search…'\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            onChange={e => dispatch(filterContacts(e.target.value))}\r\n          />\r\n        </Search>\r\n      </Toolbar>\r\n    </Box>\r\n  );\r\n}","import { ContactForm } from \"components/ContactForm/ContactForm\";\r\nimport { ContactList } from \"components/ContactList/ContactList\";\r\nimport { Filter } from \"components/Filter/Filter\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchContacts } from \"redux/contacts/operations\";\r\n\r\nexport default function HomePage() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n    <ContactForm />\r\n    <Filter />\r\n    <ContactList />\r\n    </>\r\n  );\r\n}"],"names":["getContacts","state","contacts","items","ContactForm","theme","createTheme","dispatch","useDispatch","useSelector","useState","displayAlert","setDisplayAlert","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","event","preventDefault","name","target","elements","value","number","find","contact","newContact","addContact","reset","alert","mt","TextField","margin","required","fullWidth","id","label","type","autoComplete","Alert","severity","mb","Button","columns","align","ContactList","filter","filteredContacts","toLowerCase","includes","page","setPage","rowsPerPage","setRowsPerPage","Paper","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","minWidth","fontSize","TableBody","slice","hover","role","tabIndex","onClick","deleteContact","color","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","Search","styled","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","borderColor","opacity","Filter","Toolbar","placeholder","inputProps","onChange","e","filterContacts","HomePage","useEffect","fetchContacts"],"sourceRoot":""}